<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
    <entry key="groovy.script"><![CDATA[package com.angkorteam.mbaas.server.groovy

import com.angkorteam.mbaas.plain.response.RestResponse
import com.angkorteam.mbaas.server.bean.System
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.http.ResponseEntity
import com.angkorteam.mbaas.server.spring.RestService
import org.springframework.jdbc.core.JdbcTemplate
import org.slf4j.Logger
import javax.servlet.ServletContext
import com.google.common.collect.Lists
import com.google.gson.Gson
import org.apache.commons.io.IOUtils
import org.apache.commons.io.FileUtils
import org.apache.commons.io.FilenameUtils
import org.apache.commons.io.FileSystemUtils
import org.apache.commons.lang3.StringUtils
import org.apache.commons.lang3.RandomStringUtils
import org.apache.commons.lang3.RandomUtils
import org.apache.commons.lang3.StringEscapeUtils
import org.slf4j.LoggerFactory
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.beans.factory.annotation.Qualifier
import javax.servlet.http.HttpServletRequest
import org.sql2o.Sql2o

class SampleService implements RestService {

    private static final Logger LOGGER = LoggerFactory.getLogger(SampleService.class);

    @Autowired
    private System system

    @Autowired
    private JdbcTemplate jdbcTemplate

    @Autowired
    @Qualifier("gson")
    private Gson gson

    @Autowired
    private ServletContext servletContext;

    @Autowired
    private Sql2o sql2o;

    @Override
    ResponseEntity<RestResponse> service(HttpServletRequest request) throws Throwable {
        // enjoy your logic here
        RestResponse response = new RestResponse()
        response.setData(system.randomUUID())
        return ResponseEntity.ok(response)
    }

    @Override
    final String getRestUUID() {
        // DO NOT MODIFIED
        return "%s"
    }

}
]]></entry>
</properties>